# Generated by Django 3.0.5 on 2020-04-10 15:59

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(default='email@mail.com', max_length=255, unique=True)),
                ('gender', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_admin', models.BooleanField(default=False)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Restaurant',
            fields=[
                ('resID', models.IntegerField(primary_key=True, serialize=False)),
                ('Name', models.CharField(max_length=32)),
                ('Url', models.CharField(max_length=256)),
                ('Locality', models.CharField(max_length=128)),
                ('Cost_for_two', models.IntegerField()),
                ('Cuisines', models.CharField(max_length=256)),
                ('Img_url', models.CharField(max_length=256)),
            ],
        ),
        migrations.CreateModel(
            name='VisitRating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating1', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rating2', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('dayofvisit', models.DateTimeField(auto_now=True)),
                ('girl', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='girlrated', to=settings.AUTH_USER_MODEL)),
                ('guy', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guyrated', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurantapi.Restaurant')),
            ],
        ),
        migrations.CreateModel(
            name='HasVisited',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dayofvisit', models.DateTimeField(editable=False)),
                ('restaurant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='restaurantapi.Restaurant')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DateMatch',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dateaccepted', models.BooleanField(default=False)),
                ('timeofvisit', models.TimeField(auto_now=True)),
                ('girl', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='girl', to=settings.AUTH_USER_MODEL)),
                ('guy', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='guy', to=settings.AUTH_USER_MODEL)),
                ('restaurant', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='restaurantapi.Restaurant')),
            ],
        ),
    ]
